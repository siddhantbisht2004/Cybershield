import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class OWASPVulnerabilityScanner {

    // A01: Broken Access Control
    public static boolean checkBrokenAccessControl(String targetUrl) {
        try {
            URL url = new URL(targetUrl + "/admin");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setConnectTimeout(5000);
            conn.setReadTimeout(5000);

            int code = conn.getResponseCode();
            return code == 200;
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
            return false;
        }
    }

    // A02: Cryptographic Failures
    public static boolean checkCryptographicFailures(String targetUrl) {
        if (!targetUrl.startsWith("https://")) {
            return true; // Using HTTP is already a failure
        }

        try {
            URL url = new URL(targetUrl + "/login");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setConnectTimeout(5000);
            conn.setReadTimeout(5000);

            int code = conn.getResponseCode();
            if (code == 200) {
                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                String line;
                while ((line = reader.readLine()) != null) {
                    if (line.toLowerCase().contains("password")) {
                        return true;
                    }
                }
            }
        } catch (IOException e) {
            System.out.println("Error: " + e.getMessage());
        }

        return false;
    }

    // MAIN METHOD
    public static void main(String[] args) {
        if (args.length != 1) {
            System.out.println("Usage: java OWASPVulnerabilityScanner <target_url>");
            return;
        }

        String target = args[0];
        if (!target.startsWith("http://") && !target.startsWith("https://")) {
            target = "http://" + target;
        }

        System.out.println("üîç Scanning: " + target);

        // A01
        if (checkBrokenAccessControl(target)) {
            System.out.println("‚ö†Ô∏è  A01: Broken Access Control - Vulnerability Found!");
        } else {
            System.out.println("‚úÖ A01: No Broken Access Control.");
        }

        // A02
        if (checkCryptographicFailures(target)) {
            System.out.println("‚ö†Ô∏è  A02: Cryptographic Failure - Login is Insecure!");
        } else {
            System.out.println("‚úÖ A02: No Cryptographic Failures.");
        }

        System.out.println("‚úÖ Scan complete.");
    }
}

